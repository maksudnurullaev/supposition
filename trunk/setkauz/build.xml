<?xml version="1.0"?>

<project name="supposition" basedir="." default="usage">
	<property file="build.properties" />

	<property name="src.dir" value="src" />
	<property name="src.test.dir" value="tests" />
	<property name="src.db.dir" value="db" />
	<property name="web.dir" value="WebContext" />
	<property name="web.inf.dir" value="${web.dir}/WEB-INF" />
	<property name="build.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="name" value="${application.name}-${application.version}" />

	<path id="master-classpath">
		<pathelement path="${build.dir}/"/>
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<!-- We need the servlet API classes: -->
		<!--  * for Tomcat 5/6 use servlet-api.jar -->
		<!--  * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
	</path>

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="build      --> Build the application" />
		<echo message="deploy" />
		<echo message="deploy.and.reload" />
		<echo message="deploywar" />
		<echo message="install    --> Install application in Tomcat" />
		<echo message="reload     --> Reload application in Tomcat" />
		<echo message="start      --> Start Tomcat application" />
		<echo message="stop       --> Stop Tomcat application" />
		<echo message="list       --> List Tomcat applications" />		
		<echo message="tests" />
		<echo message="tests.dbclasses" />
	</target>

	<target name="build" description="Compile main source tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
			deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<src path="${src.db.dir}" />
			<src path="${src.test.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="clear.web.classes" description="Clear compiled classes">
		<delete>
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>
		</delete>
	</target>	
	
	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>
	
	<target name="deploy.and.reload" depends="deploy, reload" description="Deploy application and Reload Tomcat"/>
	
	<target name="zzz_deploywar" depends="build"
		description="Deploy application as a WAR file">
		<war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<target name="undeploy" description="Un-Deploy application">
		<delete>
			<fileset dir="${deploy.path}/${name}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		<!-- 
		<delete dir="${deploy.path}/${name}"/>
		 -->
	</target>

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->

	<path id="catalina-ant-classpath">
		<!-- We need the Catalina jars for Tomcat -->
		<!--  * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
		</fileset>
	</path>

	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>

	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>

	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" />
	</target>
	
	<target name="tests" depends="build" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false"
			failureproperty="tests.failed" showoutput="true">
			<classpath refid="master-classpath" />
			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/Test*.class" />
				</fileset>
			</batchtest>
		</junit>

		<fail if="tests.failed">
tests.failed=${tests.failed}
***********************************************************
***********************************************************
**** One or more tests failed! Check the output ... ****
***********************************************************
***********************************************************
        </fail>
	</target>

	<target name="tests.dbclasses" depends="build" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false"
			failureproperty="tests.failed" showoutput="true">
			<classpath refid="master-classpath" />
			<formatter type="plain" usefile="false" />

			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/DBTestUsersProxyPassword.class" />
				</fileset>
			</batchtest>
		</junit>

		<fail if="tests.dbclasses.failed">
tests.failed=${tests.failed}
***********************************************************
***********************************************************
**** One or more tests failed! Check the output ... ****
***********************************************************
***********************************************************
        </fail>
	</target>	
	
	<target name="javadoc" depends="build" description="Create Javadoc API documentation">
		<mkdir dir="./doc/api" />
		<javadoc sourcepath="${src.dir}" destdir="./doc/api" packagenames="*">
			<classpath refid="master-classpath" />
		</javadoc>

	</target>	

</project>